# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: aiExchangeMessages.proto

import sys

_b = sys.version_info[0] < 3 and (lambda x: x) or (lambda x: x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()

DESCRIPTOR = _descriptor.FileDescriptor(
    name='aiExchangeMessages.proto',
    package='',
    syntax='proto3',
    serialized_options=_b('\220\001\000'),
    serialized_pb=_b(
        '\n\x18\x61iExchangeMessages.proto\"\x80\x03\n\x07Request\x12\x1f\n\x08requests\x18\x01 \x03(\x0b\x32\r.Request.Data\x1a\xd3\x02\n\x04\x44\x61ta\x12\n\n\x02id\x18\x01 \x01(\t\x12*\n\x08position\x18\x02 \x01(\x0b\x32\x16.Request.Data.PositionH\x00\x12$\n\x05speed\x18\x03 \x01(\x0b\x32\x13.Request.Data.SpeedH\x00\x12,\n\x05\x61ngle\x18\x04 \x01(\x0b\x32\x1b.Request.Data.SteeringAngleH\x00\x12$\n\x05lidar\x18\x05 \x01(\x0b\x32\x13.Request.Data.LidarH\x00\x12&\n\x06\x63\x61mera\x18\x06 \x01(\x0b\x32\x14.Request.Data.CameraH\x00\x12&\n\x06\x64\x61mage\x18\x07 \x01(\x0b\x32\x14.Request.Data.DamageH\x00\x1a\n\n\x08Position\x1a\x07\n\x05Speed\x1a\x0f\n\rSteeringAngle\x1a\x07\n\x05Lidar\x1a\x08\n\x06\x43\x61mera\x1a\x08\n\x06\x44\x61mageB\x06\n\x04\x64\x61ta\"\x92\x04\n\x08Response\x12!\n\x04\x64\x61ta\x18\x01 \x03(\x0b\x32\x13.Response.DataEntry\x1a\xa5\x03\n\x04\x44\x61ta\x12+\n\x08position\x18\x01 \x01(\x0b\x32\x17.Response.Data.PositionH\x00\x12%\n\x05speed\x18\x02 \x01(\x0b\x32\x14.Response.Data.SpeedH\x00\x12-\n\x05\x61ngle\x18\x03 \x01(\x0b\x32\x1c.Response.Data.SteeringAngleH\x00\x12%\n\x05lidar\x18\x04 \x01(\x0b\x32\x14.Response.Data.LidarH\x00\x12\'\n\x06\x63\x61mera\x18\x05 \x01(\x0b\x32\x15.Response.Data.CameraH\x00\x12\'\n\x06\x64\x61mage\x18\x06 \x01(\x0b\x32\x15.Response.Data.DamageH\x00\x1a \n\x08Position\x12\t\n\x01x\x18\x01 \x01(\x01\x12\t\n\x01y\x18\x02 \x01(\x01\x1a\x16\n\x05Speed\x12\r\n\x05speed\x18\x01 \x01(\x01\x1a\x1e\n\rSteeringAngle\x12\r\n\x05\x61ngle\x18\x01 \x01(\x01\x1a\x17\n\x05Lidar\x12\x0e\n\x06points\x18\x01 \x03(\x01\x1a\x08\n\x06\x43\x61mera\x1a\x1c\n\x06\x44\x61mage\x12\x12\n\nis_damaged\x18\x01 \x01(\x08\x42\x06\n\x04\x64\x61ta\x1a;\n\tDataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1d\n\x05value\x18\x02 \x01(\x0b\x32\x0e.Response.Data:\x02\x38\x01\"\xc8\x01\n\x07\x43ontrol\x12\'\n\tavCommand\x18\x01 \x01(\x0b\x32\x12.Control.AvCommandH\x00\x12)\n\nsimCommand\x18\x02 \x01(\x0e\x32\x13.Control.SimCommandH\x00\x1a.\n\tAvCommand\x12\x12\n\naccelerate\x18\x01 \x01(\x01\x12\r\n\x05steer\x18\x02 \x01(\x01\".\n\nSimCommand\x12\n\n\x06RESUME\x10\x00\x12\x08\n\x04\x46\x41IL\x10\x01\x12\n\n\x06\x43\x41NCEL\x10\x02\x42\t\n\x07\x63ommand\"\x18\n\tVehicleID\x12\x0b\n\x03vid\x18\x01 \x01(\t\"\x06\n\x04Void2\x85\x01\n\x11\x41IExchangeService\x12/\n\x1await_for_simulator_request\x12\n.VehicleID\x1a\x05.Void\x12#\n\x0crequest_data\x12\x08.Request\x1a\t.Response\x12\x1a\n\x07\x63ontrol\x12\x08.Control\x1a\x05.VoidB\x03\x90\x01\x00\x62\x06proto3')
)

_CONTROL_SIMCOMMAND = _descriptor.EnumDescriptor(
    name='SimCommand',
    full_name='Control.SimCommand',
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name='RESUME', index=0, number=0,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='FAIL', index=1, number=1,
            serialized_options=None,
            type=None),
        _descriptor.EnumValueDescriptor(
            name='CANCEL', index=2, number=2,
            serialized_options=None,
            type=None),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=1092,
    serialized_end=1138,
)
_sym_db.RegisterEnumDescriptor(_CONTROL_SIMCOMMAND)

_REQUEST_DATA_POSITION = _descriptor.Descriptor(
    name='Position',
    full_name='Request.Data.Position',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=340,
    serialized_end=350,
)

_REQUEST_DATA_SPEED = _descriptor.Descriptor(
    name='Speed',
    full_name='Request.Data.Speed',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=352,
    serialized_end=359,
)

_REQUEST_DATA_STEERINGANGLE = _descriptor.Descriptor(
    name='SteeringAngle',
    full_name='Request.Data.SteeringAngle',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=361,
    serialized_end=376,
)

_REQUEST_DATA_LIDAR = _descriptor.Descriptor(
    name='Lidar',
    full_name='Request.Data.Lidar',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=378,
    serialized_end=385,
)

_REQUEST_DATA_CAMERA = _descriptor.Descriptor(
    name='Camera',
    full_name='Request.Data.Camera',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=387,
    serialized_end=395,
)

_REQUEST_DATA_DAMAGE = _descriptor.Descriptor(
    name='Damage',
    full_name='Request.Data.Damage',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=397,
    serialized_end=405,
)

_REQUEST_DATA = _descriptor.Descriptor(
    name='Data',
    full_name='Request.Data',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='id', full_name='Request.Data.id', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='position', full_name='Request.Data.position', index=1,
            number=2, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='speed', full_name='Request.Data.speed', index=2,
            number=3, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='angle', full_name='Request.Data.angle', index=3,
            number=4, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='lidar', full_name='Request.Data.lidar', index=4,
            number=5, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='camera', full_name='Request.Data.camera', index=5,
            number=6, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='damage', full_name='Request.Data.damage', index=6,
            number=7, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
    ],
    extensions=[
    ],
    nested_types=[_REQUEST_DATA_POSITION, _REQUEST_DATA_SPEED, _REQUEST_DATA_STEERINGANGLE, _REQUEST_DATA_LIDAR,
                  _REQUEST_DATA_CAMERA, _REQUEST_DATA_DAMAGE, ],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
        _descriptor.OneofDescriptor(
            name='data', full_name='Request.Data.data',
            index=0, containing_type=None, fields=[]),
    ],
    serialized_start=74,
    serialized_end=413,
)

_REQUEST = _descriptor.Descriptor(
    name='Request',
    full_name='Request',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='requests', full_name='Request.requests', index=0,
            number=1, type=11, cpp_type=10, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
    ],
    extensions=[
    ],
    nested_types=[_REQUEST_DATA, ],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=29,
    serialized_end=413,
)

_RESPONSE_DATA_POSITION = _descriptor.Descriptor(
    name='Position',
    full_name='Response.Data.Position',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='x', full_name='Response.Data.Position.x', index=0,
            number=1, type=1, cpp_type=5, label=1,
            has_default_value=False, default_value=float(0),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='y', full_name='Response.Data.Position.y', index=1,
            number=2, type=1, cpp_type=5, label=1,
            has_default_value=False, default_value=float(0),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=724,
    serialized_end=756,
)

_RESPONSE_DATA_SPEED = _descriptor.Descriptor(
    name='Speed',
    full_name='Response.Data.Speed',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='speed', full_name='Response.Data.Speed.speed', index=0,
            number=1, type=1, cpp_type=5, label=1,
            has_default_value=False, default_value=float(0),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=758,
    serialized_end=780,
)

_RESPONSE_DATA_STEERINGANGLE = _descriptor.Descriptor(
    name='SteeringAngle',
    full_name='Response.Data.SteeringAngle',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='angle', full_name='Response.Data.SteeringAngle.angle', index=0,
            number=1, type=1, cpp_type=5, label=1,
            has_default_value=False, default_value=float(0),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=782,
    serialized_end=812,
)

_RESPONSE_DATA_LIDAR = _descriptor.Descriptor(
    name='Lidar',
    full_name='Response.Data.Lidar',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='points', full_name='Response.Data.Lidar.points', index=0,
            number=1, type=1, cpp_type=5, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=814,
    serialized_end=837,
)

_RESPONSE_DATA_CAMERA = _descriptor.Descriptor(
    name='Camera',
    full_name='Response.Data.Camera',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=387,
    serialized_end=395,
)

_RESPONSE_DATA_DAMAGE = _descriptor.Descriptor(
    name='Damage',
    full_name='Response.Data.Damage',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='is_damaged', full_name='Response.Data.Damage.is_damaged', index=0,
            number=1, type=8, cpp_type=7, label=1,
            has_default_value=False, default_value=False,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=849,
    serialized_end=877,
)

_RESPONSE_DATA = _descriptor.Descriptor(
    name='Data',
    full_name='Response.Data',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='position', full_name='Response.Data.position', index=0,
            number=1, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='speed', full_name='Response.Data.speed', index=1,
            number=2, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='angle', full_name='Response.Data.angle', index=2,
            number=3, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='lidar', full_name='Response.Data.lidar', index=3,
            number=4, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='camera', full_name='Response.Data.camera', index=4,
            number=5, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='damage', full_name='Response.Data.damage', index=5,
            number=6, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
    ],
    extensions=[
    ],
    nested_types=[_RESPONSE_DATA_POSITION, _RESPONSE_DATA_SPEED, _RESPONSE_DATA_STEERINGANGLE, _RESPONSE_DATA_LIDAR,
                  _RESPONSE_DATA_CAMERA, _RESPONSE_DATA_DAMAGE, ],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
        _descriptor.OneofDescriptor(
            name='data', full_name='Response.Data.data',
            index=0, containing_type=None, fields=[]),
    ],
    serialized_start=464,
    serialized_end=885,
)

_RESPONSE_DATAENTRY = _descriptor.Descriptor(
    name='DataEntry',
    full_name='Response.DataEntry',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='key', full_name='Response.DataEntry.key', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='value', full_name='Response.DataEntry.value', index=1,
            number=2, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=_b('8\001'),
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=887,
    serialized_end=946,
)

_RESPONSE = _descriptor.Descriptor(
    name='Response',
    full_name='Response',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='data', full_name='Response.data', index=0,
            number=1, type=11, cpp_type=10, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
    ],
    extensions=[
    ],
    nested_types=[_RESPONSE_DATA, _RESPONSE_DATAENTRY, ],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=416,
    serialized_end=946,
)

_CONTROL_AVCOMMAND = _descriptor.Descriptor(
    name='AvCommand',
    full_name='Control.AvCommand',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='accelerate', full_name='Control.AvCommand.accelerate', index=0,
            number=1, type=1, cpp_type=5, label=1,
            has_default_value=False, default_value=float(0),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='steer', full_name='Control.AvCommand.steer', index=1,
            number=2, type=1, cpp_type=5, label=1,
            has_default_value=False, default_value=float(0),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=1044,
    serialized_end=1090,
)

_CONTROL = _descriptor.Descriptor(
    name='Control',
    full_name='Control',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='avCommand', full_name='Control.avCommand', index=0,
            number=1, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='simCommand', full_name='Control.simCommand', index=1,
            number=2, type=14, cpp_type=8, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
    ],
    extensions=[
    ],
    nested_types=[_CONTROL_AVCOMMAND, ],
    enum_types=[
        _CONTROL_SIMCOMMAND,
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
        _descriptor.OneofDescriptor(
            name='command', full_name='Control.command',
            index=0, containing_type=None, fields=[]),
    ],
    serialized_start=949,
    serialized_end=1149,
)

_VEHICLEID = _descriptor.Descriptor(
    name='VehicleID',
    full_name='VehicleID',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='vid', full_name='VehicleID.vid', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=1151,
    serialized_end=1175,
)

_VOID = _descriptor.Descriptor(
    name='Void',
    full_name='Void',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=1177,
    serialized_end=1183,
)

_REQUEST_DATA_POSITION.containing_type = _REQUEST_DATA
_REQUEST_DATA_SPEED.containing_type = _REQUEST_DATA
_REQUEST_DATA_STEERINGANGLE.containing_type = _REQUEST_DATA
_REQUEST_DATA_LIDAR.containing_type = _REQUEST_DATA
_REQUEST_DATA_CAMERA.containing_type = _REQUEST_DATA
_REQUEST_DATA_DAMAGE.containing_type = _REQUEST_DATA
_REQUEST_DATA.fields_by_name['position'].message_type = _REQUEST_DATA_POSITION
_REQUEST_DATA.fields_by_name['speed'].message_type = _REQUEST_DATA_SPEED
_REQUEST_DATA.fields_by_name['angle'].message_type = _REQUEST_DATA_STEERINGANGLE
_REQUEST_DATA.fields_by_name['lidar'].message_type = _REQUEST_DATA_LIDAR
_REQUEST_DATA.fields_by_name['camera'].message_type = _REQUEST_DATA_CAMERA
_REQUEST_DATA.fields_by_name['damage'].message_type = _REQUEST_DATA_DAMAGE
_REQUEST_DATA.containing_type = _REQUEST
_REQUEST_DATA.oneofs_by_name['data'].fields.append(
    _REQUEST_DATA.fields_by_name['position'])
_REQUEST_DATA.fields_by_name['position'].containing_oneof = _REQUEST_DATA.oneofs_by_name['data']
_REQUEST_DATA.oneofs_by_name['data'].fields.append(
    _REQUEST_DATA.fields_by_name['speed'])
_REQUEST_DATA.fields_by_name['speed'].containing_oneof = _REQUEST_DATA.oneofs_by_name['data']
_REQUEST_DATA.oneofs_by_name['data'].fields.append(
    _REQUEST_DATA.fields_by_name['angle'])
_REQUEST_DATA.fields_by_name['angle'].containing_oneof = _REQUEST_DATA.oneofs_by_name['data']
_REQUEST_DATA.oneofs_by_name['data'].fields.append(
    _REQUEST_DATA.fields_by_name['lidar'])
_REQUEST_DATA.fields_by_name['lidar'].containing_oneof = _REQUEST_DATA.oneofs_by_name['data']
_REQUEST_DATA.oneofs_by_name['data'].fields.append(
    _REQUEST_DATA.fields_by_name['camera'])
_REQUEST_DATA.fields_by_name['camera'].containing_oneof = _REQUEST_DATA.oneofs_by_name['data']
_REQUEST_DATA.oneofs_by_name['data'].fields.append(
    _REQUEST_DATA.fields_by_name['damage'])
_REQUEST_DATA.fields_by_name['damage'].containing_oneof = _REQUEST_DATA.oneofs_by_name['data']
_REQUEST.fields_by_name['requests'].message_type = _REQUEST_DATA
_RESPONSE_DATA_POSITION.containing_type = _RESPONSE_DATA
_RESPONSE_DATA_SPEED.containing_type = _RESPONSE_DATA
_RESPONSE_DATA_STEERINGANGLE.containing_type = _RESPONSE_DATA
_RESPONSE_DATA_LIDAR.containing_type = _RESPONSE_DATA
_RESPONSE_DATA_CAMERA.containing_type = _RESPONSE_DATA
_RESPONSE_DATA_DAMAGE.containing_type = _RESPONSE_DATA
_RESPONSE_DATA.fields_by_name['position'].message_type = _RESPONSE_DATA_POSITION
_RESPONSE_DATA.fields_by_name['speed'].message_type = _RESPONSE_DATA_SPEED
_RESPONSE_DATA.fields_by_name['angle'].message_type = _RESPONSE_DATA_STEERINGANGLE
_RESPONSE_DATA.fields_by_name['lidar'].message_type = _RESPONSE_DATA_LIDAR
_RESPONSE_DATA.fields_by_name['camera'].message_type = _RESPONSE_DATA_CAMERA
_RESPONSE_DATA.fields_by_name['damage'].message_type = _RESPONSE_DATA_DAMAGE
_RESPONSE_DATA.containing_type = _RESPONSE
_RESPONSE_DATA.oneofs_by_name['data'].fields.append(
    _RESPONSE_DATA.fields_by_name['position'])
_RESPONSE_DATA.fields_by_name['position'].containing_oneof = _RESPONSE_DATA.oneofs_by_name['data']
_RESPONSE_DATA.oneofs_by_name['data'].fields.append(
    _RESPONSE_DATA.fields_by_name['speed'])
_RESPONSE_DATA.fields_by_name['speed'].containing_oneof = _RESPONSE_DATA.oneofs_by_name['data']
_RESPONSE_DATA.oneofs_by_name['data'].fields.append(
    _RESPONSE_DATA.fields_by_name['angle'])
_RESPONSE_DATA.fields_by_name['angle'].containing_oneof = _RESPONSE_DATA.oneofs_by_name['data']
_RESPONSE_DATA.oneofs_by_name['data'].fields.append(
    _RESPONSE_DATA.fields_by_name['lidar'])
_RESPONSE_DATA.fields_by_name['lidar'].containing_oneof = _RESPONSE_DATA.oneofs_by_name['data']
_RESPONSE_DATA.oneofs_by_name['data'].fields.append(
    _RESPONSE_DATA.fields_by_name['camera'])
_RESPONSE_DATA.fields_by_name['camera'].containing_oneof = _RESPONSE_DATA.oneofs_by_name['data']
_RESPONSE_DATA.oneofs_by_name['data'].fields.append(
    _RESPONSE_DATA.fields_by_name['damage'])
_RESPONSE_DATA.fields_by_name['damage'].containing_oneof = _RESPONSE_DATA.oneofs_by_name['data']
_RESPONSE_DATAENTRY.fields_by_name['value'].message_type = _RESPONSE_DATA
_RESPONSE_DATAENTRY.containing_type = _RESPONSE
_RESPONSE.fields_by_name['data'].message_type = _RESPONSE_DATAENTRY
_CONTROL_AVCOMMAND.containing_type = _CONTROL
_CONTROL.fields_by_name['avCommand'].message_type = _CONTROL_AVCOMMAND
_CONTROL.fields_by_name['simCommand'].enum_type = _CONTROL_SIMCOMMAND
_CONTROL_SIMCOMMAND.containing_type = _CONTROL
_CONTROL.oneofs_by_name['command'].fields.append(
    _CONTROL.fields_by_name['avCommand'])
_CONTROL.fields_by_name['avCommand'].containing_oneof = _CONTROL.oneofs_by_name['command']
_CONTROL.oneofs_by_name['command'].fields.append(
    _CONTROL.fields_by_name['simCommand'])
_CONTROL.fields_by_name['simCommand'].containing_oneof = _CONTROL.oneofs_by_name['command']
DESCRIPTOR.message_types_by_name['Request'] = _REQUEST
DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE
DESCRIPTOR.message_types_by_name['Control'] = _CONTROL
DESCRIPTOR.message_types_by_name['VehicleID'] = _VEHICLEID
DESCRIPTOR.message_types_by_name['Void'] = _VOID
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), dict(

    Data=_reflection.GeneratedProtocolMessageType('Data', (_message.Message,), dict(

        Position=_reflection.GeneratedProtocolMessageType('Position', (_message.Message,), dict(
            DESCRIPTOR=_REQUEST_DATA_POSITION,
            __module__='aiExchangeMessages_pb2'
            # @@protoc_insertion_point(class_scope:Request.Data.Position)
        ))
        ,

        Speed=_reflection.GeneratedProtocolMessageType('Speed', (_message.Message,), dict(
            DESCRIPTOR=_REQUEST_DATA_SPEED,
            __module__='aiExchangeMessages_pb2'
            # @@protoc_insertion_point(class_scope:Request.Data.Speed)
        ))
        ,

        SteeringAngle=_reflection.GeneratedProtocolMessageType('SteeringAngle', (_message.Message,), dict(
            DESCRIPTOR=_REQUEST_DATA_STEERINGANGLE,
            __module__='aiExchangeMessages_pb2'
            # @@protoc_insertion_point(class_scope:Request.Data.SteeringAngle)
        ))
        ,

        Lidar=_reflection.GeneratedProtocolMessageType('Lidar', (_message.Message,), dict(
            DESCRIPTOR=_REQUEST_DATA_LIDAR,
            __module__='aiExchangeMessages_pb2'
            # @@protoc_insertion_point(class_scope:Request.Data.Lidar)
        ))
        ,

        Camera=_reflection.GeneratedProtocolMessageType('Camera', (_message.Message,), dict(
            DESCRIPTOR=_REQUEST_DATA_CAMERA,
            __module__='aiExchangeMessages_pb2'
            # @@protoc_insertion_point(class_scope:Request.Data.Camera)
        ))
        ,

        Damage=_reflection.GeneratedProtocolMessageType('Damage', (_message.Message,), dict(
            DESCRIPTOR=_REQUEST_DATA_DAMAGE,
            __module__='aiExchangeMessages_pb2'
            # @@protoc_insertion_point(class_scope:Request.Data.Damage)
        ))
        ,
        DESCRIPTOR=_REQUEST_DATA,
        __module__='aiExchangeMessages_pb2'
        # @@protoc_insertion_point(class_scope:Request.Data)
    ))
    ,
    DESCRIPTOR=_REQUEST,
    __module__='aiExchangeMessages_pb2'
    # @@protoc_insertion_point(class_scope:Request)
))
_sym_db.RegisterMessage(Request)
_sym_db.RegisterMessage(Request.Data)
_sym_db.RegisterMessage(Request.Data.Position)
_sym_db.RegisterMessage(Request.Data.Speed)
_sym_db.RegisterMessage(Request.Data.SteeringAngle)
_sym_db.RegisterMessage(Request.Data.Lidar)
_sym_db.RegisterMessage(Request.Data.Camera)
_sym_db.RegisterMessage(Request.Data.Damage)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(

    Data=_reflection.GeneratedProtocolMessageType('Data', (_message.Message,), dict(

        Position=_reflection.GeneratedProtocolMessageType('Position', (_message.Message,), dict(
            DESCRIPTOR=_RESPONSE_DATA_POSITION,
            __module__='aiExchangeMessages_pb2'
            # @@protoc_insertion_point(class_scope:Response.Data.Position)
        ))
        ,

        Speed=_reflection.GeneratedProtocolMessageType('Speed', (_message.Message,), dict(
            DESCRIPTOR=_RESPONSE_DATA_SPEED,
            __module__='aiExchangeMessages_pb2'
            # @@protoc_insertion_point(class_scope:Response.Data.Speed)
        ))
        ,

        SteeringAngle=_reflection.GeneratedProtocolMessageType('SteeringAngle', (_message.Message,), dict(
            DESCRIPTOR=_RESPONSE_DATA_STEERINGANGLE,
            __module__='aiExchangeMessages_pb2'
            # @@protoc_insertion_point(class_scope:Response.Data.SteeringAngle)
        ))
        ,

        Lidar=_reflection.GeneratedProtocolMessageType('Lidar', (_message.Message,), dict(
            DESCRIPTOR=_RESPONSE_DATA_LIDAR,
            __module__='aiExchangeMessages_pb2'
            # @@protoc_insertion_point(class_scope:Response.Data.Lidar)
        ))
        ,

        Camera=_reflection.GeneratedProtocolMessageType('Camera', (_message.Message,), dict(
            DESCRIPTOR=_RESPONSE_DATA_CAMERA,
            __module__='aiExchangeMessages_pb2'
            # @@protoc_insertion_point(class_scope:Response.Data.Camera)
        ))
        ,

        Damage=_reflection.GeneratedProtocolMessageType('Damage', (_message.Message,), dict(
            DESCRIPTOR=_RESPONSE_DATA_DAMAGE,
            __module__='aiExchangeMessages_pb2'
            # @@protoc_insertion_point(class_scope:Response.Data.Damage)
        ))
        ,
        DESCRIPTOR=_RESPONSE_DATA,
        __module__='aiExchangeMessages_pb2'
        # @@protoc_insertion_point(class_scope:Response.Data)
    ))
    ,

    DataEntry=_reflection.GeneratedProtocolMessageType('DataEntry', (_message.Message,), dict(
        DESCRIPTOR=_RESPONSE_DATAENTRY,
        __module__='aiExchangeMessages_pb2'
        # @@protoc_insertion_point(class_scope:Response.DataEntry)
    ))
    ,
    DESCRIPTOR=_RESPONSE,
    __module__='aiExchangeMessages_pb2'
    # @@protoc_insertion_point(class_scope:Response)
))
_sym_db.RegisterMessage(Response)
_sym_db.RegisterMessage(Response.Data)
_sym_db.RegisterMessage(Response.Data.Position)
_sym_db.RegisterMessage(Response.Data.Speed)
_sym_db.RegisterMessage(Response.Data.SteeringAngle)
_sym_db.RegisterMessage(Response.Data.Lidar)
_sym_db.RegisterMessage(Response.Data.Camera)
_sym_db.RegisterMessage(Response.Data.Damage)
_sym_db.RegisterMessage(Response.DataEntry)

Control = _reflection.GeneratedProtocolMessageType('Control', (_message.Message,), dict(

    AvCommand=_reflection.GeneratedProtocolMessageType('AvCommand', (_message.Message,), dict(
        DESCRIPTOR=_CONTROL_AVCOMMAND,
        __module__='aiExchangeMessages_pb2'
        # @@protoc_insertion_point(class_scope:Control.AvCommand)
    ))
    ,
    DESCRIPTOR=_CONTROL,
    __module__='aiExchangeMessages_pb2'
    # @@protoc_insertion_point(class_scope:Control)
))
_sym_db.RegisterMessage(Control)
_sym_db.RegisterMessage(Control.AvCommand)

VehicleID = _reflection.GeneratedProtocolMessageType('VehicleID', (_message.Message,), dict(
    DESCRIPTOR=_VEHICLEID,
    __module__='aiExchangeMessages_pb2'
    # @@protoc_insertion_point(class_scope:VehicleID)
))
_sym_db.RegisterMessage(VehicleID)

Void = _reflection.GeneratedProtocolMessageType('Void', (_message.Message,), dict(
    DESCRIPTOR=_VOID,
    __module__='aiExchangeMessages_pb2'
    # @@protoc_insertion_point(class_scope:Void)
))
_sym_db.RegisterMessage(Void)

DESCRIPTOR._options = None
_RESPONSE_DATAENTRY._options = None

_AIEXCHANGESERVICE = _descriptor.ServiceDescriptor(
    name='AIExchangeService',
    full_name='AIExchangeService',
    file=DESCRIPTOR,
    index=0,
    serialized_options=None,
    serialized_start=1186,
    serialized_end=1319,
    methods=[
        _descriptor.MethodDescriptor(
            name='wait_for_simulator_request',
            full_name='AIExchangeService.wait_for_simulator_request',
            index=0,
            containing_service=None,
            input_type=_VEHICLEID,
            output_type=_VOID,
            serialized_options=None,
        ),
        _descriptor.MethodDescriptor(
            name='request_data',
            full_name='AIExchangeService.request_data',
            index=1,
            containing_service=None,
            input_type=_REQUEST,
            output_type=_RESPONSE,
            serialized_options=None,
        ),
        _descriptor.MethodDescriptor(
            name='control',
            full_name='AIExchangeService.control',
            index=2,
            containing_service=None,
            input_type=_CONTROL,
            output_type=_VOID,
            serialized_options=None,
        ),
    ])
_sym_db.RegisterServiceDescriptor(_AIEXCHANGESERVICE)

DESCRIPTOR.services_by_name['AIExchangeService'] = _AIEXCHANGESERVICE

# @@protoc_insertion_point(module_scope)
