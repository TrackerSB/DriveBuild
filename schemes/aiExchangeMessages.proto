syntax = "proto3";
option py_generic_services = false;

message DataRequest {
    AiID aid = 1;
    repeated string request_ids = 2;
}

message DataResponse {
    message Data {
        message Position {
            double x = 1;
            double y = 2;
        }
        message Speed {
            double speed = 1;
        }
        message SteeringAngle {
            double angle = 1;
        }
        message Lidar {
            repeated double points = 1;
        }
        message Camera {
            bytes color = 1;
            bytes annotated = 2;
            bytes depth = 3;
        }
        message Damage {
            bool is_damaged = 1;
        }
        oneof data {
            Position position = 1;
            Speed speed = 2;
            SteeringAngle angle = 3;
            Lidar lidar = 4;
            Camera camera = 5;
            Damage damage = 6;
        }
    }
    AiID aid = 1;
    map<string, Data> data = 2;
}

message Control {
    message AvCommand {
        double accelerate = 1; // FIXME Range?
        double steer = 2; // FIXME positive left, negative right? // FIXME deg or rad?
        double brake = 3; // FIXME Range?
    }

    enum SimCommand {
        RESUME = 0;
        FAIL = 1;
        CANCEL = 2;
    }
    AiID aid = 1;
    oneof command {
        AvCommand avCommand = 2;
        SimCommand simCommand = 3;
    }
}

message VehicleID {
    string vid = 1;
}

message SimulationID {
    string sid = 1;
}

message AiID {
    SimulationID sid = 1;
    VehicleID vid = 2;
}

message SimStateResponse {
    enum SimState {
        RUNNING = 0;
        FINISHED = 1;
        CANCELED = 2;
        ERRORED = 3;
    }
    SimState state = 1;
}

message Void {
}

service AIExchangeService {
    rpc wait_for_simulator_request (AiID) returns (SimStateResponse);
    rpc request_data (DataRequest) returns (DataResponse);
    rpc control (Control) returns (Void);
}
